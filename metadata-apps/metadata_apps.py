#!/usr/bin/env python3

##
# Takes a CSV file from IANA and converts to a JSON file we can use for mapping ports to applications
# Also takes a supplemental file that adds/overwrites keys from the offcial list we preferred nams.
# Useful since a lot of common stuff wee see may not be in the list or is mischaracterized.
#
# Input file from: https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.csv
##

import csv
from json import dumps, load
import re

input_filenames = ["./service-names-port-numbers.csv", "./service-names-port-numbers_supplement.csv" ]
output_directory = "/data/cache"
output_filename_ports = "{0}/nfacctd/ports.lst".format(output_directory)
output_filename_apps = "{0}/logstash/app_names.json".format(output_directory)

#init patterns
range_pattern = re.compile(r'(\d+)\-(\d+)')

#load file
app_map = {}
port_set = set()
for input_filename in input_filenames:
    with open(input_filename, 'r') as f:
        #read line by line
        csvreader = csv.reader(f, delimiter=',')
        i = 0
        #skip header
        next(csvreader)
        for row in csvreader:
            #just to be safe, if file poperly formatted then should not happen
            if len(row) < 3:
                continue
            name = row[0]
            port = row[1]
            proto = row[2]
            if not(name and port and proto):
                continue
            range_match = range_pattern.match(port)
            if range_match:
                for p in range(int(range_match.group(1)), int(range_match.group(2))+1):
                    app_map["{0}[{1}]".format(proto, p)] = name
                    port_set.add(int(p))
            else:
                app_map["{0}[{1}]".format(proto, port)] = name
                port_set.add(int(port))        

#output to ports file
with open(output_filename_ports, 'w') as f:
    f.write("!Generated by metadata_apps.py\n")
    for port_item in sorted(port_set):
        f.write("{}\n".format(port_item))

#output port list
with open(output_filename_ports, 'w') as f:
    f.write("!Generated by metadata_apps.py\n")
    for port_item in sorted(port_set):
        f.write("{}\n".format(port_item))

#output application mapping
with open(output_filename_apps, 'w') as f:
    f.write(dumps(app_map))